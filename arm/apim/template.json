{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apimPublisherEmail": {
            "type": "string",
            "defaultValue": "ahmedelharouny@outlook.com"
        },
        "apimPublisherName": {
            "type": "string",
            "defaultValue": "APIM DevOps Demo"
        },
        "apimSku": {
            "type": "string",
            "allowedValues": [
                "Developer",
                "Standard",
                "Premium"
            ],
            "defaultValue": "Developer"
        },
        "environmentName": {
            "type": "string"
        },
        "apimServiceName": {
            "type": "string"
        },
        "enableAPIsDeployment": {
            "type": "string",
            "allowedValues": [
                "true",
                "false"
            ],
            "metadata": {
                "description": "Enable provisioning APIs when deploying APIM or not"
            }
        }
    },
    "variables":{
        "templateBaseUrl": "[deployment().properties.templateLink.uri]",
        "templateQueryString": "[concat('?', last(split(deployment().properties.templateLink.uri, '?')))]",
        "uniqueId": "[split(variables('templateBaseUrl'),'/')[3]]"
    },
    "resources": [
        {
            "name": "[parameters('apimServiceName')]",
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2019-01-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "sku": {
                "name": "[parameters('apimSku')]",
                "capacity": 1
            },
            "properties": {
                "publisherEmail": "[parameters('apimPublisherEmail')]",
                "publisherName": "[parameters('apimPublisherName')]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "[concat(variables('uniqueId'), '-products')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(uri(variables('templateBaseUrl'), 'products/template.json'), variables('templateQueryString'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apimServiceName": {
                        "value": "[parameters('apimServiceName')]"
                    },
                    "environmentName": {
                        "value": "[parameters('environmentName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', parameters('apimServiceName'))]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "[concat(variables('uniqueId'), '-APIs')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(uri(variables('templateBaseUrl'), 'apis/template.json'), variables('templateQueryString'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "environmentName": {
                        "value": "[parameters('environmentName')]"
                    },
                    "apiDeploymentMode": {
                        "value": "[if(equals(parameters('apimSku'), 'Developer'), 'Serial', 'Parallel')]"
                    },
                    "enableAPIsDeployment": {
                        "value": "[parameters('enableAPIsDeployment')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.ApiManagement/service/', parameters('apimServiceName'))]",
                "[concat(variables('uniqueId'), '-products')]"
            ]
        }
    ]
}